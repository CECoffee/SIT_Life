// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart' as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'backend/stats/entity/feature.dart';
import 'backend/stats/entity/route.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 3049504742638355443),
      name: 'StatsFeatureUsage',
      lastPropertyId: const obx_int.IdUid(3, 6829777567001922062),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(id: const obx_int.IdUid(1, 7339886906527342418), name: 'id', type: 6, flags: 1),
        obx_int.ModelProperty(id: const obx_int.IdUid(2, 3550306696746963752), name: 'time', type: 10, flags: 0),
        obx_int.ModelProperty(id: const obx_int.IdUid(3, 6829777567001922062), name: 'feature', type: 9, flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 2808936172102568470),
      name: 'StatsRoute',
      lastPropertyId: const obx_int.IdUid(3, 4450762094026544792),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(id: const obx_int.IdUid(1, 2242334635534013885), name: 'id', type: 6, flags: 1),
        obx_int.ModelProperty(id: const obx_int.IdUid(2, 5995258184475796813), name: 'route', type: 9, flags: 0),
        obx_int.ModelProperty(id: const obx_int.IdUid(3, 4450762094026544792), name: 'time', type: 10, flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 2808936172102568470),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    StatsFeatureUsage: obx_int.EntityDefinition<StatsFeatureUsage>(
        model: _entities[0],
        toOneRelations: (StatsFeatureUsage object) => [],
        toManyRelations: (StatsFeatureUsage object) => {},
        getId: (StatsFeatureUsage object) => object.id,
        setId: (StatsFeatureUsage object, int id) {
          object.id = id;
        },
        objectToFB: (StatsFeatureUsage object, fb.Builder fbb) {
          final featureOffset = fbb.writeString(object.feature);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.time.millisecondsSinceEpoch);
          fbb.addOffset(2, featureOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final featureParam = const fb.StringReader(asciiOptimization: true).vTableGet(buffer, rootOffset, 8, '');
          final timeParam =
              DateTime.fromMillisecondsSinceEpoch(const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final object = StatsFeatureUsage(id: idParam, feature: featureParam, time: timeParam);

          return object;
        }),
    StatsRoute: obx_int.EntityDefinition<StatsRoute>(
        model: _entities[1],
        toOneRelations: (StatsRoute object) => [],
        toManyRelations: (StatsRoute object) => {},
        getId: (StatsRoute object) => object.id,
        setId: (StatsRoute object, int id) {
          object.id = id;
        },
        objectToFB: (StatsRoute object, fb.Builder fbb) {
          final routeOffset = fbb.writeString(object.route);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, routeOffset);
          fbb.addInt64(2, object.time.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final routeParam = const fb.StringReader(asciiOptimization: true).vTableGet(buffer, rootOffset, 6, '');
          final timeParam =
              DateTime.fromMillisecondsSinceEpoch(const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final object = StatsRoute(id: idParam, route: routeParam, time: timeParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [StatsFeatureUsage] entity fields to define ObjectBox queries.
class StatsFeatureUsage_ {
  /// See [StatsFeatureUsage.id].
  static final id = obx.QueryIntegerProperty<StatsFeatureUsage>(_entities[0].properties[0]);

  /// See [StatsFeatureUsage.time].
  static final time = obx.QueryDateProperty<StatsFeatureUsage>(_entities[0].properties[1]);

  /// See [StatsFeatureUsage.feature].
  static final feature = obx.QueryStringProperty<StatsFeatureUsage>(_entities[0].properties[2]);
}

/// [StatsRoute] entity fields to define ObjectBox queries.
class StatsRoute_ {
  /// See [StatsRoute.id].
  static final id = obx.QueryIntegerProperty<StatsRoute>(_entities[1].properties[0]);

  /// See [StatsRoute.route].
  static final route = obx.QueryStringProperty<StatsRoute>(_entities[1].properties[1]);

  /// See [StatsRoute.time].
  static final time = obx.QueryDateProperty<StatsRoute>(_entities[1].properties[2]);
}
